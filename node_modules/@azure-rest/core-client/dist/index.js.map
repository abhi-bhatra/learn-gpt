{"version":3,"file":"index.js","sources":["../src/restError.ts","../src/apiVersionPolicy.ts","../src/keyCredentialAuthenticationPolicy.ts","../src/clientHelpers.ts","../src/operationOptionHelpers.ts","../src/helpers/isReadableStream.ts","../src/sendRequest.ts","../src/urlHelpers.ts","../src/getClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PipelineResponse, RestError, createHttpHeaders } from \"@azure/core-rest-pipeline\";\nimport { PathUncheckedResponse } from \"./common\";\n\n/**\n * Creates a rest error from a PathUnchecked response\n */\nexport function createRestError(response: PathUncheckedResponse): RestError;\n/**\n * Creates a rest error from an error message and a PathUnchecked response\n */\nexport function createRestError(message: string, response: PathUncheckedResponse): RestError;\nexport function createRestError(\n  messageOrResponse: string | PathUncheckedResponse,\n  response?: PathUncheckedResponse,\n): RestError {\n  const resp = typeof messageOrResponse === \"string\" ? response! : messageOrResponse;\n  const internalError = resp.body.error || resp.body;\n  const message =\n    typeof messageOrResponse === \"string\"\n      ? messageOrResponse\n      : internalError.message ?? `Unexpected status code: ${resp.status}`;\n  return new RestError(message, {\n    statusCode: statusCodeToNumber(resp.status),\n    code: internalError.code,\n    request: resp.request,\n    response: toPipelineResponse(resp),\n  });\n}\n\nfunction toPipelineResponse(response: PathUncheckedResponse): PipelineResponse {\n  return {\n    headers: createHttpHeaders(response.headers),\n    request: response.request,\n    status: statusCodeToNumber(response.status) ?? -1,\n  };\n}\n\nfunction statusCodeToNumber(statusCode: string): number | undefined {\n  const status = Number.parseInt(statusCode);\n\n  return Number.isNaN(status) ? undefined : status;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PipelinePolicy } from \"@azure/core-rest-pipeline\";\nimport { ClientOptions } from \"./common\";\n\nexport const apiVersionPolicyName = \"ApiVersionPolicy\";\n\n/**\n * Creates a policy that sets the apiVersion as a query parameter on every request\n * @param options - Client options\n * @returns Pipeline policy that sets the apiVersion as a query parameter on every request\n */\nexport function apiVersionPolicy(options: ClientOptions): PipelinePolicy {\n  return {\n    name: apiVersionPolicyName,\n    sendRequest: (req, next) => {\n      // Use the apiVesion defined in request url directly\n      // Append one if there is no apiVesion and we have one at client options\n      const url = new URL(req.url);\n      if (!url.searchParams.get(\"api-version\") && options.apiVersion) {\n        req.url = `${req.url}${\n          Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"\n        }api-version=${options.apiVersion}`;\n      }\n\n      return next(req);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { KeyCredential } from \"@azure/core-auth\";\nimport {\n  PipelinePolicy,\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest,\n} from \"@azure/core-rest-pipeline\";\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const keyCredentialAuthenticationPolicyName = \"keyCredentialAuthenticationPolicy\";\n\nexport function keyCredentialAuthenticationPolicy(\n  credential: KeyCredential,\n  apiKeyHeaderName: string,\n): PipelinePolicy {\n  return {\n    name: keyCredentialAuthenticationPolicyName,\n    async sendRequest(request: PipelineRequest, next: SendRequest): Promise<PipelineResponse> {\n      request.headers.set(apiKeyHeaderName, credential.key);\n      return next(request);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  HttpClient,\n  Pipeline,\n  bearerTokenAuthenticationPolicy,\n  createDefaultHttpClient,\n  createPipelineFromOptions,\n} from \"@azure/core-rest-pipeline\";\nimport { KeyCredential, TokenCredential, isTokenCredential } from \"@azure/core-auth\";\n\nimport { ClientOptions } from \"./common\";\nimport { apiVersionPolicy } from \"./apiVersionPolicy\";\nimport { keyCredentialAuthenticationPolicy } from \"./keyCredentialAuthenticationPolicy\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\n/**\n * Optional parameters for adding a credential policy to the pipeline.\n */\nexport interface AddCredentialPipelinePolicyOptions {\n  /**\n   * Options related to the client.\n   */\n  clientOptions?: ClientOptions;\n  /**\n   * The credential to use.\n   */\n  credential?: TokenCredential | KeyCredential;\n}\n\n/**\n * Adds a credential policy to the pipeline if a credential is provided. If none is provided, no policy is added.\n */\nexport function addCredentialPipelinePolicy(\n  pipeline: Pipeline,\n  baseUrl: string,\n  options: AddCredentialPipelinePolicyOptions = {},\n): void {\n  const { credential, clientOptions } = options;\n  if (!credential) {\n    return;\n  }\n\n  if (isTokenCredential(credential)) {\n    const tokenPolicy = bearerTokenAuthenticationPolicy({\n      credential,\n      scopes: clientOptions?.credentials?.scopes ?? `${baseUrl}/.default`,\n    });\n    pipeline.addPolicy(tokenPolicy);\n  } else if (isKeyCredential(credential)) {\n    if (!clientOptions?.credentials?.apiKeyHeaderName) {\n      throw new Error(`Missing API Key Header Name`);\n    }\n    const keyPolicy = keyCredentialAuthenticationPolicy(\n      credential,\n      clientOptions?.credentials?.apiKeyHeaderName,\n    );\n    pipeline.addPolicy(keyPolicy);\n  }\n}\n\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nexport function createDefaultPipeline(\n  baseUrl: string,\n  credential?: TokenCredential | KeyCredential,\n  options: ClientOptions = {},\n): Pipeline {\n  const pipeline = createPipelineFromOptions(options);\n\n  pipeline.addPolicy(apiVersionPolicy(options));\n\n  addCredentialPipelinePolicy(pipeline, baseUrl, { credential, clientOptions: options });\n  return pipeline;\n}\n\nfunction isKeyCredential(credential: any): credential is KeyCredential {\n  return (credential as KeyCredential).key !== undefined;\n}\n\nexport function getCachedDefaultHttpsClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = createDefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, RequestParameters } from \"./common\";\n\n/**\n * Helper function to convert OperationOptions to RequestParameters\n * @param options - the options that are used by Modular layer to send the request\n * @returns the result of the conversion in RequestParameters of RLC layer\n */\nexport function operationOptionsToRequestParameters(options: OperationOptions): RequestParameters {\n  return {\n    allowInsecureConnection: options.requestOptions?.allowInsecureConnection,\n    timeout: options.requestOptions?.timeout,\n    skipUrlEncoding: options.requestOptions?.skipUrlEncoding,\n    abortSignal: options.abortSignal,\n    onUploadProgress: options.requestOptions?.onUploadProgress,\n    onDownloadProgress: options.requestOptions?.onDownloadProgress,\n    tracingOptions: options.tracingOptions,\n    headers: { ...options.requestOptions?.headers },\n    onResponse: options.onResponse,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Checks if the body is a ReadableStream supported by Node\n * @internal\n */\nexport function isReadableStream(body: unknown): body is NodeJS.ReadableStream {\n  return Boolean(body) && typeof (body as any).pipe === \"function\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  FormDataMap,\n  HttpClient,\n  HttpMethods,\n  Pipeline,\n  PipelineRequest,\n  PipelineResponse,\n  RequestBodyType,\n  RestError,\n  createHttpHeaders,\n  createPipelineRequest,\n} from \"@azure/core-rest-pipeline\";\nimport { getCachedDefaultHttpsClient } from \"./clientHelpers\";\nimport { isReadableStream } from \"./helpers/isReadableStream\";\nimport { HttpResponse, RequestParameters } from \"./common\";\n\n/**\n * Helper function to send request used by the client\n * @param method - method to use to send the request\n * @param url - url to send the request to\n * @param pipeline - pipeline with the policies to run when sending the request\n * @param options - request options\n * @param customHttpClient - a custom HttpClient to use when making the request\n * @returns returns and HttpResponse\n */\nexport async function sendRequest(\n  method: HttpMethods,\n  url: string,\n  pipeline: Pipeline,\n  options: InternalRequestParameters = {},\n  customHttpClient?: HttpClient,\n): Promise<HttpResponse> {\n  const httpClient = customHttpClient ?? getCachedDefaultHttpsClient();\n  const request = buildPipelineRequest(method, url, options);\n  const response = await pipeline.sendRequest(httpClient, request);\n  const headers = response.headers.toJSON();\n  const stream = response.readableStreamBody ?? response.browserStreamBody;\n  const parsedBody =\n    options.responseAsStream || stream !== undefined ? undefined : getResponseBody(response);\n  const body = stream ?? parsedBody;\n\n  if (options?.onResponse) {\n    options.onResponse({ ...response, request, rawHeaders: headers, parsedBody });\n  }\n\n  return {\n    request,\n    headers,\n    status: `${response.status}`,\n    body,\n  };\n}\n\n/**\n * Function to determine the content-type of a body\n * this is used if an explicit content-type is not provided\n * @param body - body in the request\n * @returns returns the content-type\n */\nfunction getContentType(body: any): string {\n  if (ArrayBuffer.isView(body)) {\n    return \"application/octet-stream\";\n  }\n\n  // By default return json\n  return \"application/json; charset=UTF-8\";\n}\n\nexport interface InternalRequestParameters extends RequestParameters {\n  responseAsStream?: boolean;\n}\n\nfunction buildPipelineRequest(\n  method: HttpMethods,\n  url: string,\n  options: InternalRequestParameters = {},\n): PipelineRequest {\n  const { body, formData } = getRequestBody(options.body, options.contentType);\n  const hasContent = body !== undefined || formData !== undefined;\n\n  const headers = createHttpHeaders({\n    ...(options.headers ? options.headers : {}),\n    accept: options.accept ?? \"application/json\",\n    ...(hasContent && {\n      \"content-type\": options.contentType ?? getContentType(options.body),\n    }),\n  });\n\n  return createPipelineRequest({\n    url,\n    method,\n    body,\n    formData,\n    headers,\n    allowInsecureConnection: options.allowInsecureConnection,\n    tracingOptions: options.tracingOptions,\n    abortSignal: options.abortSignal,\n    onUploadProgress: options.onUploadProgress,\n    onDownloadProgress: options.onDownloadProgress,\n    timeout: options.timeout,\n    enableBrowserStreams: true,\n    streamResponseStatusCodes: options.responseAsStream\n      ? new Set([Number.POSITIVE_INFINITY])\n      : undefined,\n  });\n}\n\ninterface RequestBody {\n  body?: RequestBodyType;\n  formData?: FormDataMap;\n}\n\n/**\n * Prepares the body before sending the request\n */\nfunction getRequestBody(body?: unknown, contentType: string = \"\"): RequestBody {\n  if (body === undefined) {\n    return { body: undefined };\n  }\n\n  if (isReadableStream(body)) {\n    return { body };\n  }\n\n  if (!contentType && typeof body === \"string\") {\n    return { body };\n  }\n\n  const firstType = contentType.split(\";\")[0];\n\n  if (firstType === \"application/json\") {\n    return { body: JSON.stringify(body) };\n  }\n\n  if (ArrayBuffer.isView(body)) {\n    return { body: body instanceof Uint8Array ? body : JSON.stringify(body) };\n  }\n\n  switch (firstType) {\n    case \"multipart/form-data\":\n      return isFormData(body)\n        ? { formData: processFormData(body) }\n        : { body: JSON.stringify(body) };\n    case \"text/plain\":\n      return { body: String(body) };\n    default:\n      if (typeof body === \"string\") {\n        return { body };\n      }\n      return { body: JSON.stringify(body) };\n  }\n}\n\nfunction isFormData(body: unknown): body is FormDataMap {\n  return body instanceof Object && Object.keys(body).length > 0;\n}\n\n/**\n * Checks if binary data is in Uint8Array format, if so wrap it in a Blob\n * to send over the wire\n */\nfunction processFormData(formData?: FormDataMap) {\n  if (!formData) {\n    return formData;\n  }\n\n  const processedFormData: FormDataMap = {};\n\n  for (const element in formData) {\n    const item = formData[element];\n    if (item instanceof Uint8Array) {\n      // Some RLCs take a Uint8Array for the parameter, whereas FormDataMap expects\n      // a File or a Blob, so we need to wrap it.\n      processedFormData[element] = new Blob([item]);\n    } else {\n      processedFormData[element] = item;\n    }\n  }\n\n  return processedFormData;\n}\n\n/**\n * Prepares the response body\n */\nfunction getResponseBody(response: PipelineResponse): RequestBodyType | undefined {\n  // Set the default response type\n  const contentType = response.headers.get(\"content-type\") ?? \"\";\n  const firstType = contentType.split(\";\")[0];\n  const bodyToParse = response.bodyAsText ?? \"\";\n\n  if (firstType === \"text/plain\") {\n    return String(bodyToParse);\n  }\n  // Default to \"application/json\" and fallback to string;\n  try {\n    return bodyToParse ? JSON.parse(bodyToParse) : undefined;\n  } catch (error: any) {\n    // If we were supposed to get a JSON object and failed to\n    // parse, throw a parse error\n    if (firstType === \"application/json\") {\n      throw createParseError(response, error);\n    }\n\n    // We are not sure how to handle the response so we return it as\n    // plain text.\n    return String(bodyToParse);\n  }\n}\n\nfunction createParseError(response: PipelineResponse, err: any): RestError {\n  const msg = `Error \"${err}\" occurred while parsing the response body - ${response.bodyAsText}.`;\n  const errCode = err.code ?? RestError.PARSE_ERROR;\n  return new RestError(msg, {\n    code: errCode,\n    statusCode: response.status,\n    request: response.request,\n    response: response,\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestParameters } from \"./common\";\n\n/**\n * Builds the request url, filling in query and path parameters\n * @param baseUrl - base url which can be a template url\n * @param routePath - path to append to the baseUrl\n * @param pathParameters - values of the path parameters\n * @param options - request parameters including query parameters\n * @returns a full url with path and query parameters\n */\nexport function buildRequestUrl(\n  baseUrl: string,\n  routePath: string,\n  pathParameters: string[],\n  options: RequestParameters = {},\n): string {\n  if (routePath.startsWith(\"https://\") || routePath.startsWith(\"http://\")) {\n    return routePath;\n  }\n  baseUrl = buildBaseUrl(baseUrl, options);\n  routePath = buildRoutePath(routePath, pathParameters, options);\n  const requestUrl = appendQueryParams(`${baseUrl}/${routePath}`, options);\n  const url = new URL(requestUrl);\n\n  return (\n    url\n      .toString()\n      // Remove double forward slashes\n      .replace(/([^:]\\/)\\/+/g, \"$1\")\n  );\n}\n\nfunction appendQueryParams(url: string, options: RequestParameters = {}) {\n  if (!options.queryParameters) {\n    return url;\n  }\n  let parsedUrl = new URL(url);\n  const queryParams = options.queryParameters;\n  for (const key of Object.keys(queryParams)) {\n    const param = queryParams[key] as any;\n    if (param === undefined || param === null) {\n      continue;\n    }\n    if (!param.toString || typeof param.toString !== \"function\") {\n      throw new Error(`Query parameters must be able to be represented as string, ${key} can't`);\n    }\n    const value = param.toISOString !== undefined ? param.toISOString() : param.toString();\n    parsedUrl.searchParams.append(key, value);\n  }\n\n  if (options.skipUrlEncoding) {\n    parsedUrl = skipQueryParameterEncoding(parsedUrl);\n  }\n  return parsedUrl.toString();\n}\n\nfunction skipQueryParameterEncoding(url: URL) {\n  if (!url) {\n    return url;\n  }\n  const searchPieces: string[] = [];\n  for (const [name, value] of url.searchParams) {\n    // QUIRK: searchParams.get retrieves the values decoded\n    searchPieces.push(`${name}=${value}`);\n  }\n  // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n  url.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n  return url;\n}\n\nexport function buildBaseUrl(baseUrl: string, options: RequestParameters): string {\n  if (!options.pathParameters) {\n    return baseUrl;\n  }\n  const pathParams = options.pathParameters;\n  for (const [key, param] of Object.entries(pathParams)) {\n    if (param === undefined || param === null) {\n      throw new Error(`Path parameters ${key} must not be undefined or null`);\n    }\n    if (!param.toString || typeof param.toString !== \"function\") {\n      throw new Error(`Path parameters must be able to be represented as string, ${key} can't`);\n    }\n    let value = param.toISOString !== undefined ? param.toISOString() : String(param);\n    if (!options.skipUrlEncoding) {\n      value = encodeURIComponent(param);\n    }\n    baseUrl = replaceAll(baseUrl, `{${key}}`, value) ?? \"\";\n  }\n  return baseUrl;\n}\n\nfunction buildRoutePath(\n  routePath: string,\n  pathParameters: string[],\n  options: RequestParameters = {},\n) {\n  for (const pathParam of pathParameters) {\n    let value = pathParam;\n    if (!options.skipUrlEncoding) {\n      value = encodeURIComponent(pathParam);\n    }\n\n    routePath = routePath.replace(/\\{\\w+\\}/, value);\n  }\n  return routePath;\n}\n\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(\n  value: string | undefined,\n  searchValue: string,\n  replaceValue: string,\n): string | undefined {\n  return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { KeyCredential, TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { HttpClient, HttpMethods, Pipeline, PipelineOptions } from \"@azure/core-rest-pipeline\";\nimport { createDefaultPipeline } from \"./clientHelpers\";\nimport {\n  Client,\n  ClientOptions,\n  HttpBrowserStreamResponse,\n  HttpNodeStreamResponse,\n  RequestParameters,\n  StreamableMethod,\n} from \"./common\";\nimport { sendRequest } from \"./sendRequest\";\nimport { buildRequestUrl } from \"./urlHelpers\";\n\n/**\n * Creates a client with a default pipeline\n * @param baseUrl - Base endpoint for the client\n * @param options - Client options\n */\nexport function getClient(baseUrl: string, options?: ClientOptions): Client;\n/**\n * Creates a client with a default pipeline\n * @param baseUrl - Base endpoint for the client\n * @param credentials - Credentials to authenticate the requests\n * @param options - Client options\n */\nexport function getClient(\n  baseUrl: string,\n  credentials?: TokenCredential | KeyCredential,\n  options?: ClientOptions,\n): Client;\nexport function getClient(\n  baseUrl: string,\n  credentialsOrPipelineOptions?: (TokenCredential | KeyCredential) | ClientOptions,\n  clientOptions: ClientOptions = {},\n): Client {\n  let credentials: TokenCredential | KeyCredential | undefined;\n  if (credentialsOrPipelineOptions) {\n    if (isCredential(credentialsOrPipelineOptions)) {\n      credentials = credentialsOrPipelineOptions;\n    } else {\n      clientOptions = credentialsOrPipelineOptions ?? {};\n    }\n  }\n\n  const pipeline = createDefaultPipeline(baseUrl, credentials, clientOptions);\n  if (clientOptions.additionalPolicies?.length) {\n    for (const { policy, position } of clientOptions.additionalPolicies) {\n      // Sign happens after Retry and is commonly needed to occur\n      // before policies that intercept post-retry.\n      const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n      pipeline.addPolicy(policy, {\n        afterPhase,\n      });\n    }\n  }\n\n  const { allowInsecureConnection, httpClient } = clientOptions;\n  const client = (path: string, ...args: Array<any>) => {\n    const getUrl = (requestOptions: RequestParameters) =>\n      buildRequestUrl(baseUrl, path, args, { allowInsecureConnection, ...requestOptions });\n\n    return {\n      get: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"GET\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      post: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"POST\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      put: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"PUT\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      patch: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"PATCH\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      delete: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"DELETE\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      head: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"HEAD\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      options: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"OPTIONS\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n      trace: (requestOptions: RequestParameters = {}): StreamableMethod => {\n        return buildOperation(\n          \"TRACE\",\n          getUrl(requestOptions),\n          pipeline,\n          requestOptions,\n          allowInsecureConnection,\n          httpClient,\n        );\n      },\n    };\n  };\n\n  return {\n    path: client,\n    pathUnchecked: client,\n    pipeline,\n  };\n}\n\nfunction buildOperation(\n  method: HttpMethods,\n  url: string,\n  pipeline: Pipeline,\n  options: RequestParameters,\n  allowInsecureConnection?: boolean,\n  httpClient?: HttpClient,\n): StreamableMethod {\n  allowInsecureConnection = options.allowInsecureConnection ?? allowInsecureConnection;\n  return {\n    then: function (onFulfilled, onrejected) {\n      return sendRequest(\n        method,\n        url,\n        pipeline,\n        { ...options, allowInsecureConnection },\n        httpClient,\n      ).then(onFulfilled, onrejected);\n    },\n    async asBrowserStream() {\n      return sendRequest(\n        method,\n        url,\n        pipeline,\n        { ...options, allowInsecureConnection, responseAsStream: true },\n        httpClient,\n      ) as Promise<HttpBrowserStreamResponse>;\n    },\n    async asNodeStream() {\n      return sendRequest(\n        method,\n        url,\n        pipeline,\n        { ...options, allowInsecureConnection, responseAsStream: true },\n        httpClient,\n      ) as Promise<HttpNodeStreamResponse>;\n    },\n  };\n}\n\nfunction isCredential(\n  param: (TokenCredential | KeyCredential) | PipelineOptions,\n): param is TokenCredential | KeyCredential {\n  if ((param as KeyCredential).key !== undefined || isTokenCredential(param)) {\n    return true;\n  }\n\n  return false;\n}\n"],"names":["RestError","createHttpHeaders","isTokenCredential","bearerTokenAuthenticationPolicy","createPipelineFromOptions","createDefaultHttpClient","createPipelineRequest"],"mappings":"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"}