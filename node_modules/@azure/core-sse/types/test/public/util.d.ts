export declare function assertAsyncIterable<T>(iter: AsyncIterable<T>, count: number, validate: (x: T, idx: number) => void): Promise<void>;
export declare const encoder: TextEncoder;
export declare const decoder: TextDecoder;
export declare function createDataEvent(data: Uint8Array): Uint8Array;
export declare function createDataLine(data: Uint8Array): Uint8Array;
export declare function createComment(data: Uint8Array): Uint8Array;
export declare function createId(data: Uint8Array): Uint8Array;
export declare function createType(data: Uint8Array): Uint8Array;
export declare function createRetry(data: Uint8Array): Uint8Array;
export declare function createChunkedEvent(str: string, chunkLen: number): Iterable<Uint8Array>;
export declare function genEvents(iter: Iterable<Uint8Array>): Iterable<Uint8Array>;
export declare function genChunks(iter: Iterable<Uint8Array>, chunkLen: number): Iterable<Uint8Array>;
export declare function genLines(iter: Iterable<Uint8Array>): Iterable<Uint8Array>;
export declare function genStrs(count: number): Generator<Uint8Array>;
export declare function genComments(iter: Iterable<Uint8Array>): Iterable<Uint8Array>;
//# sourceMappingURL=util.d.ts.map